---
AWSTemplateFormatVersion: "2010-09-09"
Description: Template to create a simple s3 bucket

Parameters:

  BucketName:
    Description: Name of S3 bucket for ETL
    Type: String
  GlueDatabaseName:
    Description: Name of Glue Database
    Type: String
  GlueJobName:
    Description: Name of Glue Job
    Type: String
  GlueCrawlerName:
    Description: Name of Glue Crawler
    Type: String


Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: BucketOwnerFullControl
      BucketName: !Ref BucketName

  GlueDatabase:
    Type: AWS::Glue::Database
    Properties:
      DatabaseInput:
        Name: !Ref GlueDatabaseName
      CatalogId: !Ref AWS::AccountId

  GlueJobRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "*"
                Resource: "*"

  GlueCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Role: !GetAtt GlueJobRole.Arn
      Description: Crawler to populate AML DB table
      DatabaseName: !Ref GlueDatabaseName
      Targets:
        S3Targets:
        -
          Path: !Sub "s3://${BucketName}/raw_data"
      Name: !Ref GlueCrawlerName


  GlueJob:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: glueetl
        ScriptLocation: !Sub "s3://${BucketName}/glue-scripts/glue_etl.py"
      DefaultArguments:
        "--glue-db-name": !Ref GlueDatabaseName
        "--glue-table-name": raw_data
        "--s3-bucket-name":  !Ref BucketName
      ExecutionProperty:
        MaxConcurrentRuns: 2
      MaxRetries: 0
      Name: !Ref GlueJobName
      Role: !Ref GlueJobRole

  GlueJobSucceededTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: GlueJobSucceededTopic
      TopicName: GlueJobSucceededTopic

  GlueJobSucceededTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sns:Publish
            Resource: '*'
      Topics:
        - !Ref GlueJobSucceededTopic

  JobSucceededEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Event for when Glue Job state is success"
      EventPattern:
        source:
          - "aws.glue"
        detail-type:
          - "Glue Job State Change"
        detail:
          state:
            - "SUCCEEDED"
      State: "ENABLED"
      Targets:
        -
          Arn: !Ref GlueJobSucceededTopic
          Id: GlueJobSucceededTopic

Outputs:
  BucketName:
    Description: Name of the bucket
    Value: !Ref BucketName
  GlueDatabaseName:
    Description: Name of Glue Database
    Value: !Ref GlueDatabaseName
  GlueJobName:
    Description: Name of Glue Job
    Value: !Ref GlueJobName
  GlueCrawlerName:
    Description: Name of Glue Crawler
    Value: !Ref GlueCrawlerName
  AWSAccountId:
    Description: AWS Account Id
    Value: !Ref AWS::AccountId
  GlueJobSucceededTopic:
    Description: Arn of SNS Topic which notifies the success of Glue Job
    Value: !Ref GlueJobSucceededTopic