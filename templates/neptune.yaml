---
AWSTemplateFormatVersion: '2010-09-09'
Description: Neptune Stack inside a VPC

Parameters:
  Env:
    Description: Environment tag, e.g. prod, nonprod.
    Default: test
    Type: String
    AllowedPattern: "[a-z0-9]+"
    MaxLength: 15
  DbInstanceType:
    Description: Neptune DB instance type
    Type: String
    Default: db.r4.large
    AllowedValues:
    - db.r4.large
    - db.r4.xlarge
    - db.r4.2xlarge
    - db.r4.4xlarge
    - db.r4.8xlarge
    ConstraintDescription: Must be a valid Neptune instance type.
  DBReplicaIdentifierSuffix:
    Description: 'OPTIONAL: The ID for the Neptune Replica to use. Empty means no
      read replica.'
    Type: String
    Default: ''
  NeptuneQueryTimeout:
    Type: Number
    Default: 120000
    Description: Neptune Query Time out (in milliseconds)
  NeptuneEnableAuditLog:
    Type: Number
    Default: 0
    AllowedValues:
    - 0
    - 1
    Description: Enable Audit Log. 0 means disable and 1 means enable.
  IamAuthEnabled:
    Type: String
    Default: 'false'
    AllowedValues:
    - 'true'
    - 'false'
    Description: Enable IAM Auth for Neptune.
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The list of SubnetIds in your Virtual Private Cloud (VPC)
  NeptuneSG:
    Type: String
    Description: Security Group for Neptune
  VPC:
    Type: String
    Description: VPC for Neptune


Conditions:
  CreateDBReplicaInstance:
    Fn::Not:
    - Fn::Equals:
      - Ref: DBReplicaIdentifierSuffix
      - ''

Resources:
  NeptuneDBSubnetGroup:
    Type: AWS::Neptune::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Neptune DB subnet group
      SubnetIds: !Ref SubnetIds
      Tags:
      - Key: Name
        Value: !Sub Neptune-${Env}
      - Key: StackId
        Value: !Sub "${AWS::StackId}"
      - Key: Stack
        Value: !Sub "${AWS::Region}-${AWS::StackName}"
      - Key: Application
        Value: NeptuneCloudformation

  NeptuneEC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: NeptuneEC2ClientRole
    DependsOn:
    - NeptuneEC2ClientRole

  NeptuneEC2ClientRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"

  NeptuneIamAuthUser:
    Type: AWS::IAM::User
    Properties:
      Path: "/"

  NeptuneAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: NeptuneAccessPolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - rds:*
          - iam:GetAccountSummary
          - iam:ListAccountAliases
          - iam:PassRole
          Resource: "*"
      Roles:
      - Ref: NeptuneEC2ClientRole

  NeptuneIAMAuthPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: NeptuneIAMAuthPolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - neptune-db:*
          Resource:
            Fn::Join:
            - ''
            - - 'arn:aws:neptune-db:'
              - Ref: AWS::Region
              - ":"
              - Ref: AWS::AccountId
              - ":"
              - Fn::GetAtt:
                - NeptuneDBCluster
                - ClusterResourceId
              - "/*"
      Roles:
      - Ref: NeptuneEC2ClientRole
      Users:
      - Ref: NeptuneIamAuthUser

  NeptuneLoadFromS3Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - rds.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"

  NeptuneLoadFromS3Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: NeptuneLoadFromS3Policy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - s3:Get*
          - s3:List*
          Resource: "*"
      Roles:
      - Ref: NeptuneLoadFromS3Role

  NeptuneDBClusterParameterGroup:
    Type: AWS::Neptune::DBClusterParameterGroup
    Properties:
      Family: neptune1
      Description: test-cfn-neptune-db-cluster-parameter-group-description
      Parameters:
        neptune_enable_audit_log:
          Ref: NeptuneEnableAuditLog
      Tags:
      - Key: Name
        Value: !Sub Neptune-${Env}
      - Key: StackId
        Value: !Sub "${AWS::StackName}"
      - Key: Stack
        Value: !Sub "${AWS::Region}-${AWS::StackId}"
      - Key: Application
        Value: NeptuneCloudformation

  NeptuneDBParameterGroup:
    Type: AWS::Neptune::DBParameterGroup
    Properties:
      Family: neptune1
      Description: test-cfn-neptune-db-parameter-group-description
      Parameters:
        neptune_query_timeout:
          Ref: NeptuneQueryTimeout
      Tags:
      - Key: Name
        Value: !Sub Neptune-${Env}
      - Key: StackId
        Value: !Sub "${AWS::StackId}"
      - Key: Stack
        Value: !Sub "${AWS::Region}-${AWS::StackName}"
      - Key: Application
        Value: NeptuneCloudformation

  NeptuneDBCluster:
    Type: AWS::Neptune::DBCluster
    Properties:
      DBSubnetGroupName:
        Ref: NeptuneDBSubnetGroup
      VpcSecurityGroupIds:
      - !Ref NeptuneSG
      DBClusterParameterGroupName:
        Ref: NeptuneDBClusterParameterGroup
      IamAuthEnabled:
        Ref: IamAuthEnabled
      Tags:
      - Key: Name
        Value: !Sub Neptune-${Env}
      - Key: StackId
        Value: !Sub "${AWS::StackId}"
      - Key: Stack
        Value: !Sub "${AWS::Region}-${AWS::StackName}"
      - Key: Application
        Value: NeptuneCloudformation
    DependsOn:
    - NeptuneDBSubnetGroup
    - NeptuneDBClusterParameterGroup

  NeptuneDBInstance:
    Type: AWS::Neptune::DBInstance
    Properties:
      DBClusterIdentifier:
        Ref: NeptuneDBCluster
      DBInstanceClass:
        Ref: DbInstanceType
      DBParameterGroupName:
        Ref: NeptuneDBParameterGroup
      Tags:
      - Key: Name
        Value: !Sub Neptune-${Env}
      - Key: StackId
        Value: !Sub "${AWS::StackId}"
      - Key: Stack
        Value: !Sub "${AWS::Region}-${AWS::StackName}"
      - Key: Application
        Value: NeptuneCloudformation
    DependsOn:
    - NeptuneDBCluster
    - NeptuneDBParameterGroup

  NeptuneDBReplicaInstance:
    Type: AWS::Neptune::DBInstance
    Condition: CreateDBReplicaInstance
    Properties:
      DBInstanceIdentifier:
        Fn::Join:
        - ''
        - - Ref: DBReplicaIdentifierSuffix
          - "-"
          - Fn::Sub: "${AWS::StackName}"
      DBClusterIdentifier:
        Ref: NeptuneDBCluster
      DBInstanceClass:
        Ref: DbInstanceType
      Tags:
      - Key: Name
        Value: !Sub Neptune-${Env}
      - Key: StackId
        Value: !Sub "${AWS::StackId}"
      - Key: Stack
        Value: !Sub "${AWS::Region}-${AWS::StackName}"
      - Key: Application
        Value: NeptuneCloudformation
    DependsOn:
    - NeptuneDBCluster
    - NeptuneDBInstance

Outputs:
  DBClusterId:
    Description: Neptune Cluster Identifier
    Value:
      Ref: NeptuneDBCluster
  DBSubnetGroupId:
    Description: Neptune DBSubnetGroup Identifier
    Value:
      Ref: NeptuneDBSubnetGroup
  DBClusterResourceId:
    Description: Neptune Cluster Resource Identifier
    Value:
      Fn::GetAtt:
      - NeptuneDBCluster
      - ClusterResourceId
  DBClusterEndpoint:
    Description: Master Endpoint for Neptune Cluster
    Value:
      Fn::GetAtt:
      - NeptuneDBCluster
      - Endpoint
  DBInstanceEndpoint:
    Description: Master Instance Endpoint
    Value:
      Fn::GetAtt:
      - NeptuneDBInstance
      - Endpoint
  DBReplicaInstanceEndpoint:
    Description: ReadReplica Instance Endpoint
    Condition: CreateDBReplicaInstance
    Value:
      Fn::GetAtt:
      - NeptuneDBReplicaInstance
      - Endpoint
  SparqlEndpoint:
    Description: Sparql Endpoint for Neptune
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt:
          - NeptuneDBCluster
          - Endpoint
        - ":"
        - Fn::GetAtt:
          - NeptuneDBCluster
          - Port
        - "/sparql"
  GremlinEndpoint:
    Description: Gremlin Endpoint for Neptune
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt:
          - NeptuneDBCluster
          - Endpoint
        - ":"
        - Fn::GetAtt:
          - NeptuneDBCluster
          - Port
        - "/gremlin"
  LoaderEndpoint:
    Description: Loader Endpoint for Neptune
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt:
          - NeptuneDBCluster
          - Endpoint
        - ":"
        - Fn::GetAtt:
          - NeptuneDBCluster
          - Port
        - "/loader"
  DBClusterReadEndpoint:
    Description: DB cluster Read Endpoint
    Value:
      Fn::GetAtt:
      - NeptuneDBCluster
      - ReadEndpoint
  DBClusterPort:
    Description: Port for the Neptune Cluster
    Value:
      Fn::GetAtt:
      - NeptuneDBCluster
      - Port
  NeptuneLoadFromS3IAMRoleArn:
    Description: IAM Role for loading data in Neptune
    Value:
      Fn::GetAtt:
      - NeptuneLoadFromS3Role
      - Arn
  NeptuneIamAuthUser:
    Description: IAM User for accessing Neptune via IAM Auth
    Value:
      Ref: NeptuneIamAuthUser
  NeptuneEC2InstanceProfile:
    Description: Neptune EC2 Instance Profile
    Value:
      Ref: NeptuneEC2InstanceProfile
